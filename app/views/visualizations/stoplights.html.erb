<style>
	
		a#target {
		    width: 30px;
		    height: 30px;
		    display: block;
		    margin: 0 auto;
		    margin-left: 0px;
		    position: relative;
		}
		a#target #pulse {
/*			width: 30px;*/
/*		    height: 30px;*/
		    width: 260px;
		    height: 260px;
		    display: block;
		    position: absolute;
/*		    top: -2px;*/
/*		    left: -2px;*/
/*		    border: 2px solid #30a3ec; */
			border: 2px solid #E9042B;
		    border-radius: 50px;
		    box-shadow: 0 0 5px #a0eaff;
		    /* Animate */
		    -webkit-animation-name: pulse;
		    -webkit-animation-duration: 1s;
		    -webkit-animation-iteration-count: infinite;
		    -webkit-animation-timing-function: ease-out;
		    -moz-animation-name: pulse;
		    -moz-animation-duration: 1s;
		    -moz-animation-iteration-count: infinite;
		    -moz-animation-timing-function: ease-out;
		    -o-animation-name: pulse;
		    -o-animation-duration: 1s;
		    -o-animation-iteration-count: infinite;
		    -o-animation-timing-function: ease-out;
		    animation-name: pulse;
		    animation-duration: 1s;
		    animation-iteration-count: infinite;
		    animation-timing-function: ease-out;
		}
		
				.pulsing {
				    width: 30px;
				    height: 30px;
				    display: block;
				    position: absolute;
		/*		    top: -2px;*/
		/*		    left: -2px;*/
		/*		    border: 2px solid #30a3ec; */
					border: 2px solid #E9042B;
				    border-radius: 50px;
				    box-shadow: 0 0 5px #a0eaff;
				    /* Animate */
				    -webkit-animation-name: pulse;
				    -webkit-animation-duration: 1s;
				    -webkit-animation-iteration-count: infinite;
				    -webkit-animation-timing-function: ease-out;
				    -moz-animation-name: pulse;
				    -moz-animation-duration: 1s;
				    -moz-animation-iteration-count: infinite;
				    -moz-animation-timing-function: ease-out;
				    -o-animation-name: pulse;
				    -o-animation-duration: 1s;
				    -o-animation-iteration-count: infinite;
				    -o-animation-timing-function: ease-out;
				    animation-name: pulse;
				    animation-duration: 1s;
				    animation-iteration-count: infinite;
				    animation-timing-function: ease-out;
				}
		
		
		.pulse-size {
			-webkit-animation-name: pulse-size;
		    -webkit-animation-duration: 2s;
		    -webkit-animation-iteration-count: infinite;
		    -webkit-animation-timing-function: ease-out;
/*		    -moz-animation-name: pulse-size;
		    -moz-animation-duration: 2s;
		    -moz-animation-iteration-count: infinite;
		    -moz-animation-timing-function: ease-out;
		    -o-animation-name: pulse-size;
		    -o-animation-duration: 2s;
		    -o-animation-iteration-count: infinite;
		    -o-animation-timing-function: ease-out;
		    animation-name: pulse-size;
		    animation-duration: 2s;
		    animation-iteration-count: infinite;
		    animation-timing-function: ease-out;*/
		}
		
		/* The animation */
		/* WebKit/Safari and Chrome */
		@-webkit-keyframes pulse-size {
		    0% {
		        -webkit-transform: scale(0.3);
		        transform: scale(0.3);
/*		        opacity: 0.5;*/
		    }

		    80% {
		        -webkit-transform: scale(1.5);
		        transform: scale(1.5);
/*		        opacity: 0;*/
		    }

		    100% {
		        -webkit-transform: scale(2.5);
		        transform: scale(2.5);
/*		        opacity: 0;*/
		    }    
		}

		/* The animation */
		/* WebKit/Safari and Chrome */
		@-webkit-keyframes pulse {
		    0% {
		        -webkit-transform: scale(0.3);
		        transform: scale(0.3);
		        opacity: 0.5;
		    }

		    80% {
		        -webkit-transform: scale(1.5);
		        transform: scale(1.5);
		        opacity: 0;
		    }

		    100% {
		        -webkit-transform: scale(2.5);
		        transform: scale(2.5);
		        opacity: 0;
		    }    
		}
		/* Gecko/Firefox */
		@-moz-keyframes pulse {
		    0% {
		        -moz-transform: scale(0.3);
		        transform: scale(0.3);
		        opacity: 0.5;
		    }

		    80% {
		        -moz-transform: scale(1.5);
		        transform: scale(1.5);
		        opacity: 0;
		    }

		    100% {
		        -moz-transform: scale(2.5);
		        transform: scale(2.5);
		        opacity: 0;
		    }    
		}
		/* Presto/Opera */
		@-o-keyframes pulse {
		    0% {
		        -o-transform: scale(0.3);
		        transform: scale(0.3);
		        opacity: 0.5;
		    }

		    80% {
		        -o-transform: scale(1.5);
		        transform: scale(1.5);
		        opacity: 0;
		    }

		    100% {
		        -o-transform: scale(2.5);
		        transform: scale(2.5);
		        opacity: 0;
		    }    
		}
		/* Standard */
		@keyframes pulse {
		    0% {
		        transform: scale(0.3);
		        opacity: 0.5;
		    }

		    80% {
		        transform: scale(1.5);
		        opacity: 0;
		    }

		    100% {
		        transform: scale(2.5);
		        opacity: 0;
		    }    
		}
		
		/* d3.js */
		.chart {
		  background: #fff;
		  border: solid 1px #ddd;
		  box-shadow: 0 0 4px rgba(0,0,0,.2);
		  font: 10px sans-serif;
		  height: 500px;
		  position: relative;
		  width: 720px;
		}

		.chart svg {
/*		  border-left: solid 2px #ddd;*/
		  left: 360px;
		  position: absolute;
		  top: 0;
		}

		.chart pre {
		  font: 12px monospace;
		  height: 60px;
		  left: 10px;
		  position: absolute;
		  top: 0;
		  width: 340px;
		}

		.chart circle.little {
		  fill: #aaa;
		  stroke: #666;
		  stroke-width: 1.5px;
		}
		
		circle.little {
		  fill: #aaa;
		  stroke: #666;
		  stroke-width: 1.5px;
		}

		.chart button {
		  left: 275px;
		  position: absolute;
		  top: 145px;
		  width: 80px;
		}

		.chart .data rect {
		  fill: #eee;
		  stroke: #ccc;
		}
		
		html, body { margin:0; padding:0 }
		svg { position:absolute; top:0; left:0; height:100%; width:100% }
		

	</style>
	


<div data-role="page" class="type-interior" id='mainpage'>
	</br>
	<div class='center-wrapper' id='logo' data-role="none" data-theme='a' style='font-size: 50px;'>liveSynergy</div>
	</br>
	<div data-role="navbar" data-theme='a'>
    	<ul> 
			<li><a href="/home" data-iconpos="top" data-icon="home" data-ajax="false" class="ui-btn-up-b">HOME</a></li>
            <li><a href="/entities" data-iconpos="top" data-icon="check" data-ajax="false" class='ui-btn-up-b'  >MYTHINGS/MYSPACES</a></li>
			<li><a href="/triggers" data-iconpos="top" data-icon="grid" data-ajax="false" class='ui-btn-up-b'>MY TRIGGERS</a></li>
			<li><a href="/zones" data-iconpos="top" data-icon="alert" data-ajax="false" class="ui-btn-active">ZONES</a></li>
			<li><a href="/energy" data-iconpos="top" data-icon="star" data-ajax="false" class='ui-btn-up-b'>ENERGY</a></li>
    	</ul>
    </div>
	
	<div id="vis" style="margin-top: 1000px;">
	</div>
    <h3>first</h3><div id='first'></div>
	<h3>second</h3><div id='second'> </div>
    <h3>third</h3><div id='third'></div>
</div>

<script>
	//(function() {
		// alert(window.innerWidth);
	$(document).ready(function(){	
		var width = parseInt(window.innerWidth);
		var height = parseInt(window.innerHeight);
		
		var w = 1000,
			h = 1000;
			
		var svg = d3.select("#vis").append("svg:svg")
						.attr("width", w)
						.attr("height", h);
		
		// var foreign1 = svg.append("svg:foreignObject") 
		//  .append("body").append("p")
		//  .html('<a href="#" id="target" title="Target" style="left: ' + (width / 2 - 300 - 125).toString() + 'px; top:' + (25).toString() + 'px"><span id="pulse"></span></a>');
		
		// rssi
		var y1 = d3.scale.linear()
		    .domain([10, 35])
		    .range([600, 300]);
		
		var y2 = d3.scale.linear()
		    .domain([10, 35])
		    .range([600, 300]);
		
		var y3 = d3.scale.linear()
		    .domain([10, 35])
		    .range([600, 300]);
		
		var x1 = d3.scale.linear()
		    .domain([10, 35])
		    .range([200, 300]);

		var x2 = d3.scale.linear()
		    .domain([10, 35])
		    .range([600, 300]);

		var x3 = d3.scale.linear()
		    .domain([10, 35])
		    .range([400, 300]);
	
		var red_gradient = svg.append("svg:defs")
		  .append("svg:linearGradient")
		    .attr("id", "red_gradient")
		    .attr("x1", "0%")
		    .attr("y1", "0%")
		    .attr("x2", "100%")
		    .attr("y2", "100%")
		    .attr("spreadMethod", "pad");

		red_gradient.append("svg:stop")
		    .attr("offset", "0%")
		    .attr("stop-color", "#EAC4D4")
		    .attr("stop-opacity", 1);

		red_gradient.append("svg:stop")
		    .attr("offset", "100%")
		    .attr("stop-color", "#E9042B")
		    .attr("stop-opacity", 1);
		
		// background: -webkit-gradient(linear, left top, right top, color-stop(0%,#959595), color-stop(46%,#0d0d0d), color-stop(50%,#010101), color-stop(53%,#0a0a0a), color-stop(76%,#4e4e4e), color-stop(87%,#383838), color-stop(100%,#1b1b1b)); /* Chrome,Safari4+ */
		// 			
		var black_gradient = svg.append("svg:defs")
		  .append("svg:linearGradient")
		    .attr("id", "black_gradient")
		    .attr("x1", "0%")
		    .attr("y1", "0%")
		    .attr("x2", "100%")
		    .attr("y2", "100%")
		    .attr("spreadMethod", "pad");

		black_gradient.append("svg:stop")
		    .attr("offset", "0%")
		    .attr("stop-color", "#959595")
		    .attr("stop-opacity", 1);
		
		black_gradient.append("svg:stop")
		    .attr("offset", "46%")
		    .attr("stop-color", "#0d0d0d")
		    .attr("stop-opacity", 1);

		black_gradient.append("svg:stop")
		    .attr("offset", "50%")
		    .attr("stop-color", "#010101")
		    .attr("stop-opacity", 1);

		black_gradient.append("svg:stop")
		    .attr("offset", "53%")
		    .attr("stop-color", "#0a0a0a")
		    .attr("stop-opacity", 1);

		black_gradient.append("svg:stop")
		    .attr("offset", "76%")
		    .attr("stop-color", "#4e4e4e")
		    .attr("stop-opacity", 1);

		black_gradient.append("svg:stop")
		    .attr("offset", "87%")
		    .attr("stop-color", "#383838")
		    .attr("stop-opacity", 1);
		
		black_gradient.append("svg:stop")
		    .attr("offset", "100%")
		    .attr("stop-color", "#1b1b1b")
		    .attr("stop-opacity", 1);
		
		var yellow_gradient = svg.append("svg:defs")
		  .append("svg:linearGradient")
		    .attr("id", "yellow_gradient")
		    .attr("x1", "0%")
		    .attr("y1", "0%")
		    .attr("x2", "100%")
		    .attr("y2", "100%")
		    .attr("spreadMethod", "pad");

		yellow_gradient.append("svg:stop")
		    .attr("offset", "0%")
		    .attr("stop-color", "#fefcea")
		    .attr("stop-opacity", 1);

		yellow_gradient.append("svg:stop")
		    .attr("offset", "100%")
		    .attr("stop-color", "#fadb4e")
		    .attr("stop-opacity", 1);
		
		var green_gradient = svg.append("svg:defs")
		  .append("svg:linearGradient")
		    .attr("id", "green_gradient")
		    .attr("x1", "0%")
		    .attr("y1", "0%")
		    .attr("x2", "100%")
		    .attr("y2", "100%")
		    .attr("spreadMethod", "pad");

		green_gradient.append("svg:stop")
		    .attr("offset", "0%")
		    .attr("stop-color", "#b4e391")
		    .attr("stop-opacity", 1);

		green_gradient.append("svg:stop")
		    .attr("offset", "50%")
		    .attr("stop-color", "#61c419")
		    .attr("stop-opacity", 1);

		green_gradient.append("svg:stop")
		    .attr("offset", "100%")
		    .attr("stop-color", "#b4e391")
		    .attr("stop-opacity", 1);
		
		var y1 = 125 + 50 + 150;
		var y2 = y1 + 250;
		var y3 = y1 + 490;
		
		var x2 = width / 2;
		var x1 = x2 - 300;
		var x3 = x2 + 300;
		var r = 100;
		
		svg.append("svg:rect")
		    .attr("x",  x2 - 125)
		    .attr("y",  y1 - 125)
			.attr("rx",  100)
		    .attr("ry",  100)
		    .attr("width", 250)
		    .attr("height", 775)
			// .style("z-index", '-1')
		    .style("fill", "url(#black_gradient)");
	
		var red2 = svg.append("svg:circle")
			.attr("cx", x2)
			.attr("cy", y1)
			.attr("r", r)
			.attr("fill-opacity", 1)
			.style("fill", "url(#red_gradient)");

		var yellow2 = svg.append("svg:circle")
			.attr("cx", x2)
			.attr("cy", y2)
			.attr("r", r)
			.attr("fill-opacity", .20)
			.style("fill", "url(#yellow_gradient)");

		var green2 = svg.append("svg:circle")
			.attr("cx", x2)
			.attr("cy", y3)
			.attr("r", r)
			.attr("fill-opacity", .20)
			.style("fill", "url(#green_gradient)");
				
		var id1;
		var id2;
		var id3;
		var y = 0;
		
		function redraw(){
			d3.json("/zones/data", function(json) {
				var data1 = json.data.link1;
		
				if( data1 != null) {
				if (data1.zoneType == 2){
					red1.attr("fill-opacity", .20);
					yellow1.attr("fill-opacity", .20);
					green1.attr("fill-opacity", 1);
				}
				else if (data1.zoneType == 1){
					red1.attr("fill-opacity", .20);
					yellow1.attr("fill-opacity", 1);
					green1.attr("fill-opacity", .20);
				}
				else if ( data1.zoneType == 0) {
					red1.attr("fill-opacity", 1);
					yellow1.attr("fill-opacity", .20);
					green1.attr("fill-opacity", .20);
				}	
				}

				var data2 = json.data.link2;
				if( data2 != null){
				if (data2.zoneType == 2){
					red2.attr("fill-opacity", .20);
					yellow2.attr("fill-opacity", .20);
					green2.attr("fill-opacity", 1);
				}
				else if (data2.zoneType == 1){
					red2.attr("fill-opacity", .20);
					yellow2.attr("fill-opacity", 1);
					green2.attr("fill-opacity", .20);
				}
				else if (data2.zoneType == 0) {
					red2.attr("fill-opacity", 1);
					yellow2.attr("fill-opacity", .20);
					green2.attr("fill-opacity", .20);
				}
				}
				var data3 = json.data.link3;
				if (data3 != null){
				if (data3.zoneType == 2){
					red3.attr("fill-opacity", .20);
					yellow3.attr("fill-opacity", .20);
					green3.attr("fill-opacity", 1);
				}
				else if (data3.zoneType == 1){
					red3.attr("fill-opacity", .20);
					yellow3.attr("fill-opacity", 1);
					green3.attr("fill-opacity", .20);
				}
				else if (data3.zoneType == 0) {
					red3.attr("fill-opacity", 1);
					yellow3.attr("fill-opacity", .20);
					green3.attr("fill-opacity", .20);
				} else { /* alert(':('); */}

				} else { /* alert('null'); */}

                if (json.data.link1 != null)
                	$('#first').html('<h2>' + json.data.link1.zoneType + '<h2>');
                if (json.data.link2 != null)
                	$('#second').html('<h2>' +json.data.link2.zoneType+ '<h2>');
                if (json.data.link3 != null)
                	$('#third').html('<h2>'+ json.data.link3.zoneType + '<h2>');
			});	
		}
		
		
		setInterval(function() {
		   redraw();
		}, 100);
		/*
              alert('before redraw');
	      var milliseconds = 1000;
              for (var x = 0; x < 1000; x++){
			var start = new Date().getTime();
  			for (var i = 0; i < 1e7; i++) {
   			 	if ((new Date().getTime() - start) > milliseconds){
     			 	redraw();
                 	alert('redraw');
                	break;
    			}
  			}
		}*/
	});
</script>




